# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-01-12 16:03
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import public.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
                ('first_name', models.CharField(blank=True, max_length=604, verbose_name='First name')),
                ('user_img', models.ImageField(blank=True, null=True, upload_to='users')),
                ('user_img_placeholder', models.ImageField(blank=True, null=True, upload_to='users')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('last_name', models.CharField(blank=True, max_length=604, verbose_name='Last name')),
                ('oauth_id', models.CharField(blank=True, max_length=1028, null=True, verbose_name='OAuth id')),
                ('user_permission', models.IntegerField(blank=True, null=True)),
                ('date_unsubscribe', models.DateTimeField(blank=True, null=True, verbose_name='Date unsubscribe')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Homme'), ('F', 'Femme')], max_length=100, null=True)),
                ('date_birth', models.DateField(blank=True, null=True, verbose_name='Date birth')),
                ('social_professional_category', models.CharField(blank=True, choices=[('1', 'artisans, commercants, chefs entreprise'), ('2', 'cadres et professions intellectuelles superieures'), ('3', 'professions intermediaires'), ('4', 'employes'), ('5', 'ouvriers'), ('6', 'retraites'), ('7', 'chomeurs'), ('8', 'etudiants'), ('9', 'autres')], max_length=500, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('car_size', models.CharField(blank=True, choices=[('1', 'petite voiture'), ('2', 'moyenne voiture'), ('3', 'grande voiture')], max_length=20, null=True, verbose_name='car size')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name_plural': 'Users',
                'db_table': 't_users',
                'ordering': ('date_joined',),
            },
            managers=[
                ('objects', public.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_number', models.IntegerField(null=True)),
                ('street_name', models.CharField(max_length=1028, verbose_name='Street name')),
                ('postal_code', models.IntegerField()),
                ('complement', models.CharField(blank=True, max_length=1028, null=True, verbose_name='Complement address')),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 't_addresses',
            },
        ),
        migrations.CreateModel(
            name='Advert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='title Advert')),
                ('advert_date', models.DateTimeField(auto_now_add=True, verbose_name='Advert date')),
                ('advert_state', models.CharField(choices=[('1', 'en ligne'), ('2', 'expire'), ('3', 'recupere'), ('4', 'valide'), ('5', 'supprimer')], max_length=10, verbose_name='Advert state')),
                ('situation', models.CharField(choices=[('1', 'a vendre'), ('2', 'a donner'), ('3', 'a debarrasser')], max_length=20, verbose_name='situation')),
                ('price', models.FloatField(blank=True, null=True)),
                ('type_place', models.CharField(choices=[('1', 'chez un particulier'), ('2', 'dans la rue'), ('3', 'dans un point de collecte')], max_length=20, verbose_name='type place ')),
                ('description', models.CharField(blank=True, max_length=1028, null=True, verbose_name='description')),
                ('advert_img', models.ImageField(blank=True, null=True, upload_to='adverts')),
                ('advert_img_placeholder', models.ImageField(blank=True, null=True, upload_to='adverts')),
                ('object_state', models.CharField(choices=[('1', 'mauvais etat'), ('2', 'etat moyen'), ('3', 'bon etat')], max_length=20, verbose_name='stateObject')),
                ('volume', models.CharField(choices=[('1', 'peu encombrant'), ('2', 'encombrant'), ('3', 'tres encombrant')], max_length=20, verbose_name='volume advert')),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('quantity', models.IntegerField()),
                ('buy_place', models.CharField(choices=[('1', 'grande distribution'), ('2', 'artisan'), ('3', 'magasin specialise'), ('4', 'indefini')], max_length=20, verbose_name='buy place')),
                ('constraint_time_begin', models.TimeField(blank=True, null=True, verbose_name='time begin')),
                ('constraint_time_end', models.TimeField(blank=True, null=True, verbose_name='time end')),
                ('advert_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.Address')),
                ('advert_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 't_adverts',
                'ordering': ('advert_date',),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(choices=[('1', 'mobilier'), ('2', 'decos'), ('3', 'jardin'), ('4', 'materiaux'), ('5', 'electromenager'), ('6', 'petits_electromenagers'), ('7', 'textiles'), ('8', 'vaisselles'), ('9', 'transports'), ('10', 'divers')], max_length=20, verbose_name='category name')),
            ],
            options={
                'db_table': 't_categories',
            },
        ),
        migrations.CreateModel(
            name='CenterOfInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_center_of_interest', models.CharField(blank=True, max_length=200, null=True, verbose_name='name center of interest')),
            ],
            options={
                'db_table': 't_centers_of_interest',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=1028)),
            ],
            options={
                'db_table': 't_cities',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district_name', models.CharField(max_length=200, verbose_name='name district')),
                ('density', models.IntegerField(blank=True, null=True)),
                ('polygon', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.City')),
            ],
            options={
                'db_table': 't_districts',
            },
        ),
        migrations.CreateModel(
            name='InterestFor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('center_of_interest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.CenterOfInterest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 't_interest_for',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like_datetime', models.DateTimeField(auto_now_add=True, verbose_name='When')),
                ('advert_like', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.Advert')),
                ('user_like', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 't_likes',
            },
        ),
        migrations.CreateModel(
            name='PickUpPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recovery_type', models.CharField(choices=[('1', 'emballage'), ('2', 'verre'), ('3', 'textile')], max_length=20, verbose_name='recovery type')),
                ('pickup_point_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.Address')),
            ],
            options={
                'db_table': 't_pickup_Points',
            },
        ),
        migrations.CreateModel(
            name='Recovery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recovery_datetime', models.DateTimeField(verbose_name='recovery date ')),
                ('advert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.Advert')),
                ('recovery_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 't_recoveries',
                'ordering': ('recovery_datetime',),
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_category_name', models.CharField(choices=[('1', 'armoire'), ('2', 'buffet'), ('3', 'canape'), ('4', 'chaise'), ('5', 'commode'), ('6', 'etagere'), ('7', 'fauteuil'), ('8', 'fenetre'), ('9', 'lit'), ('10', 'matelas'), ('11', 'porte'), ('12', 'pouf'), ('13', 'table'), ('14', 'table_chevet'), ('15', 'tabouret'), ('16', 'bougeoire'), ('17', 'cadre'), ('18', 'coussin'), ('19', 'luminaire'), ('20', 'miroir'), ('21', 'pendule'), ('22', 'rideaux'), ('23', 'tapis'), ('24', 'vase'), ('25', 'barbecue'), ('26', 'echelle'), ('27', 'hamac'), ('28', 'parasol'), ('29', 'bois'), ('30', 'carton'), ('31', 'ceramique'), ('32', 'metal'), ('33', 'papier'), ('34', 'plastique'), ('35', 'tissu'), ('36', 'verre'), ('37', 'aspirateur'), ('38', 'climatiseur'), ('39', 'congelateur'), ('40', 'four'), ('41', 'refrigerateur'), ('42', 'lave_vaisselle'), ('43', 'lave_linge'), ('44', 'poele_a_bois'), ('45', 'ventilateur'), ('46', 'balance'), ('47', 'batteur'), ('48', 'bouilloire'), ('49', 'cafetiere'), ('50', 'crepiere'), ('51', 'fer_a_repasser'), ('52', 'friteuse'), ('53', 'gauffrier'), ('54', 'grille_pain'), ('55', 'machine_a_fondue'), ('56', 'micro_onde'), ('57', 'mixeur'), ('58', 'pese_personne'), ('59', 'plancha'), ('60', 'plaque_de_cuisson'), ('61', 'raclette'), ('62', 'radiateur'), ('63', 'bonnet'), ('64', 'chaussure'), ('65', 'chemise'), ('66', 'couverture'), ('67', 'gant'), ('68', 'pantalon'), ('69', 'pull'), ('70', 'serviette'), ('71', 'short'), ('72', 't_shirt'), ('73', 'veste'), ('74', 'assiette'), ('75', 'carsserole'), ('76', 'couvert'), ('77', 'faitout'), ('78', 'plateau'), ('79', 'poele'), ('80', 'saladier'), ('81', 'theiere'), ('82', 'verre'), ('83', 'roller'), ('84', 'skateboard'), ('85', 'ski'), ('86', 'snowboard'), ('87', 'trottinette'), ('88', 'velo'), ('89', 'baignoire'), ('90', 'bocal'), ('91', 'boite'), ('92', 'bouteille'), ('93', 'lavabo'), ('94', 'sac'), ('95', 'tonneau'), ('96', 'valise')], max_length=20, verbose_name='Sub-category name')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.Category')),
            ],
            options={
                'db_table': 't_sub_categories',
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_datetime', models.DateTimeField(auto_now_add=True, verbose_name='When')),
                ('advert_visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.Advert')),
                ('user_visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 't_visits',
            },
        ),
        migrations.AddField(
            model_name='advert',
            name='sub_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.SubCategory'),
        ),
        migrations.AddField(
            model_name='address',
            name='address_city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.City'),
        ),
        migrations.AddField(
            model_name='address',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='public.District'),
        ),
        migrations.AddField(
            model_name='user',
            name='home_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='public.Address'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
